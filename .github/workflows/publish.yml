name: Run tests and build wheels.

on: [ workflow_dispatch ]

jobs:

  linux:
    name: Linux
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Install dev packages
        run: |
          python -m pip install wheel
          python -m pip install .[dev]

      - name: Run tests
        run: |
          pytest --benchmark-skip -vv

      - name: Build sdist
        if: ${{ matrix.python-version == '3.12' }}
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: latest
          command: sdist
          before-script-linux: rm -rf ".github" "tests" ".gitignore"
          args: --out dist

      - name: Build Wheels
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: latest
          target: x86_64
          manylinux: auto
          args: --release --strip --out dist -i ${{ matrix.python-version }}

      - name: Install built wheel
        if: ${{ matrix.python-version == '3.12' }}
        run: |
          cd dist
          python -m pip install cykooz.rehash --no-index --find-links ./ --force-reinstall
          python -c "import cykooz.rehash"
          cd ..

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels_lin-${{ matrix.python-version }}
          path: dist


  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Install dev packages
        run: |
          python -m pip install wheel
          python -m pip install .[dev]

      - name: Run tests
        run: |
          pytest --benchmark-skip -vv

      - name: Build wheel
        uses: messense/maturin-action@v1
        with:
          target: "x86_64-pc-windows-msvc"
          args: --release --strip --out dist -i python

      - name: Install built wheel
        run: |
          cd dist
          python -m pip install cykooz.rehash --no-index --find-links . --force-reinstall
          python -c "import cykooz.rehash"
          cd ..

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels_win-${{ matrix.python-version }}
          path: dist


  macos:
    name: MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Install dev packages
        run: |
          python -m pip install wheel
          python -m pip install .[dev]

      - name: Run tests
        run: |
          pytest --benchmark-skip -vv

      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: "x86_64-apple-darwin"
          args: --release --strip --out dist -i python

      - name: Install built wheel - x86_64
        run: |
          cd dist
          python -m pip install cykooz.rehash --find-links . --force-reinstall
          python -c "import cykooz.rehash"
          cd ..

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels_mac-${{ matrix.python-version }}
          path: dist

  wheels:
    runs-on: ubuntu-latest
    needs: [ linux, windows, macos ]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: wheels
          delete-merged: true
